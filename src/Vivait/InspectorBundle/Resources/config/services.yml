parameters:
  vivait_inspector.register.class: Vivait\InspectorBundle\Service\Inspection\RegisterInspection
  vivait_inspector.serviceloader.class: Vivait\Common\Container\Service\LoaderService

  vivait_inspector.inspection.type.class: Vivait\InspectorBundle\Form\InspectionType

  # TODO: These actions should be moved in to their own libraries
  vivait_inspector.action.sendemail.class: Vivait\InspectorBundle\Service\Action\SendEmailService
  vivait_inspector.action.sendemail.type.class: Vivait\InspectorBundle\Form\Action\SendEmailType

  vivait_inspector.action.footprint.class: Vivait\InspectorBundle\Service\Action\FootprintService
  vivait_inspector.action.footprint.type.class: Vivait\InspectorBundle\Form\Action\FootprintType

  vivait_inspector.condition.type.class: Vivait\InspectorBundle\Form\ConditionType
  vivait_inspector.condition.expression.type.class: Vivait\InspectorBundle\Form\Condition\ExpressionType

  vivait_inspector.event.registry.class: Vivait\InspectorBundle\Service\Event\EventRegistry
  vivait_inspector.voter.registry.class: Vivait\InspectorBundle\Service\Voter\VoterRegistry
  vivait_inspector.event.provider.class: Vivait\InspectorBundle\Service\Event\EventProvider
  vivait_inspector.event.provider.cache.class: Vivait\InspectorBundle\Service\Event\EventCacheProvider

  vivait_inspector.voter.and.class: Vivait\Voter\Voter\AndVoter
  vivait_inspector.voter.or.class: Vivait\Voter\Voter\OrVoter

  vivait_inspector.event.registry.configcache.class: Symfony\Component\Config\ConfigCache
#  vivait_inspector.inspection.cachewarmer.class: Vivait\InspectorBundle\CacheWarmer\InspectionCacheWarmer

  vivait_inspector.event.registry.cache: appInspectionEvents.php
 # vivait_inspector.inspections.cache: appInpsection.php

  vivait_inspector.actiondispatcher.factory.class: Vivait\InspectorBundle\Model\ActionDispatcherFactory
  vivait_inspector.repository.inspections.class: Vivait\InspectorBundle\Entity\InspectionRepository

  vivait_inspector.event_dispatcher.class: Vivait\InspectorBundle\EventDispatcher\LazyLoadEventDispatcher

services:
  vivait_inspection.repository.inspections:
    class: %vivait_inspector.repository.inspections.class%
    factory_service: doctrine.orm.entity_manager
    factory_method: getRepository
    arguments:
        - 'VivaitInspectorBundle:Inspection'

  vivait_inspector.register:
    class: %vivait_inspector.register.class%
    arguments: [@vivait_inspector.actiondispatcher.factory]

  vivait_inspector.actiondispatcher.factory:
    class: %vivait_inspector.actiondispatcher.factory.class%
    arguments: [@vivait_inspection.repository.inspections, @vivait_inspector.serviceloader, @vivait_inspector.voter.registry]

  vivait_inspector.serviceloader:
    class: %vivait_inspector.serviceloader.class%
    arguments: [@service_container]

  vivait_inspector.action.sendemail:
    class: %vivait_inspector.action.sendemail.class%
    arguments: [@swiftmailer.mailer]
    scope: prototype

  vivait_inspector.action.footprint:
    class: %vivait_inspector.action.footprint.class%
    arguments: [@vivait.footprint.message]
    scope: prototype

  vivait_inspector.inspection.type:
    class: %vivait_inspector.inspection.type.class%
    factory_class: %vivait_inspector.inspection.type.class%
    factory_method: factory
    arguments: [@doctrine.orm.default_entity_manager, @vivait_inspector.voter.registry, @vivait_inspector.event.registry]
    tags:
       -  { name: form.type,  alias: vivait_inspectorbundle_inspection }

  vivait_inspector.condition.type:
    class: %vivait_inspector.condition.type.class%
    tags:
       -  { name: form.type,  alias: vivait_inspectorbundle_condition }

  vivait_inspector.action.footprint.type:
    class: %vivait_inspector.action.footprint.type.class%
    tags:
       -  { name: form.type,  alias: vivait_inspectorbundle_action_footprint }

  vivait_inspector.action.sendemail.type:
    class: %vivait_inspector.action.sendemail.type.class%
    tags:
       -  { name: form.type,  alias: vivait_inspectorbundle_action_sendemail }

  vivait_inspector.condition.expression.type:
    class: %vivait_inspector.condition.expression.type.class%
    tags:
       -  { name: form.type,  alias: vivait_inspectorbundle_condition_expression }

  vivait_inspector.voter.registry:
    class: %vivait_inspector.voter.registry.class%

  vivait_inspector.event.registry:
    class: %vivait_inspector.event.registry.class%
    arguments: ["@=service('vivait_inspector.event.provider').getEvents()"]

  vivait_inspector.event.provider:
    class: %vivait_inspector.event.provider.cache.class%
    arguments: ['@vivait_inspector.event.registry.configcache', '%vivait_inspector.event_locations%']

  vivait_inspector.voter.and:
    class: %vivait_inspector.voter.and.class%
    tags:
       -  { name: vivait_inspector.voter, alias: 'and', label: 'And' }

  vivait_inspector.voter.or:
    class: %vivait_inspector.voter.or.class%
    tags:
       -  { name: vivait_inspector.voter, alias: 'or', label: 'Or' }

  vivait_inspector.event.registry.configcache:
    class: %vivait_inspector.event.registry.configcache.class%
    arguments: ['%kernel.cache_dir%/%vivait_inspector.event.registry.cache%', '%kernel.debug%']

#  vivait_inspector.inpsection.cachewarmer:
#    class: %vivait_inspector.inspection.cachewarmer.class%
#    arguments: [@doctrine.orm.default_entity_manager]
#    calls:
#      - [setCacheFile, ['%vivait_inspector.inspections.cache%']]
#    tags:
#       -  { name: kernel.cache_warmer }

  vivait_inspector.event_dispatcher:
     class: %vivait_inspector.event_dispatcher.class%
     arguments: ['@vivait_inspector.event_dispatcher.inner', '@vivait_inspection.repository.inspections', '@vivait_inspector.register']
